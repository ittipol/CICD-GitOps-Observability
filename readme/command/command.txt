alias k=kubectl

## Linux
## Linux distros (Linux distribution) group of open source Linux operating system ex. Ubuntu, Debian, Arch Linux, Red Hat, Fedora
id -u
id -g

ps
ps aux | grep kubectl
pe -ef

htop

## ===================================

## Run a specific service in docker-compose
docker-compose up -d docker-registry && docker-compose up -d nginx

## sshpass
sshpass -p my_password ssh username@hostname
sshpass -p 'YOUR_PASSWORD_HERE' ssh -o StrictHostKeyChecking=no username@hostname

## Transfer file
scp -i $(minikube ssh-key) <local-path> <user>@<hostname_or_ip>:<remote-path>
e.g., scp -i $(minikube ssh-key) ./cert/ca.crt docker@$(minikube ip):/home/docker/ca.crt

## Copy an entire directory
scp -r ./data/install user@hostname:~/data/install/

## Package manager
## Update package version after installed (apt command for debian) (yum command for redhat)
sudo apt update
sudo apt upgrade

## ls command
ls -lh
ls -la
ls -ltr
ls -ltrh | tail -5
ls -1t | head -5
ls -1t | tail -5

## cat command
cat -n <filename>
cat -b <filename>

## Redirect an output to write a file
## use the > operator, To write content to a file (overwrite)
## standard output > file
echo "message" > data.txt

## use the >> operator, To add content to the end of an existing file (append)
## standard output >> file
echo "1234" >> data.txt

## Add a newline character in file
echo -e "data A\ndata B\ndata C" > data.txt

# Use the kafka-console-producer command to send a message to a Kafka topic
kafka-console-producer.sh --broker-list <kafka-service>:9092 --topic test
kafka-console-consumer.sh --bootstrap-server <kafka-service>:9092 --topic test --from-beginning