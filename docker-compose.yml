services:

  jenkins:
    build: ./docker/dockerfiles/jenkins
    container_name: jenkins
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: 1
      # VAULT_ADDR: "http://vault:8200"
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro     
      - ./docker/docker_registry/tls/server.crt:/docker_registry/cert/server.crt:ro
      - ./kubernetes/docker_registry/tls/server.crt:/docker_registry/kubernetes/cert/server.crt:ro
      - ./deployment/jenkins/dockerfiles:/dockerfiles:ro
      - ./unit_test:/unit_test
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - docker-dind
    networks:
      - jenkins

  docker-dind:
    # image: docker:dind
    build: ./docker/dockerfiles/dind
    container_name: docker-in-docker
    privileged: true
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
      - ./docker/docker_registry/tls/ca.crt:/docker_registry/cert/ca.crt:ro
      - ./kubernetes/docker_registry/tls/ca.crt:/docker_registry/kubernetes/cert/ca.crt:ro
      - ./docker/dockerfiles:/dockerfiles:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      jenkins:
        aliases:
          - docker
      
  docker-registry:
    image: registry:2.8.3
    container_name: docker-registry
    environment:
      # REGISTRY_HTTP_ADDR: 0.0.0.0:5000
      REGISTRY_HTTP_TLS_CERTIFICATE: "/tls/server.crt"
      REGISTRY_HTTP_TLS_KEY: "/tls/server.pem"
      REGISTRY_AUTH: "htpasswd"
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: "/auth/htpasswd"
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    volumes:
      - ./docker/docker_registry/tls:/tls:ro
      - ./docker/docker_registry/auth:/auth:ro
    networks:
      jenkins:
        aliases:
          - registry
  
  sonarqube:
    image: sonarqube:9-community
    container_name: sonarqube
    restart: unless-stopped
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - postgres
    ports:
      - "9000:9000"
    networks:
      - jenkins

  postgres:
    image: postgres:15.2-alpine3.17
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - jenkins

  nginx:
    build: ./docker/nginx
    container_name: nginx_proxy
    ports:
      - 5000:5000
    restart: unless-stopped
    volumes:
      - ./docker/docker_registry/tls/server.crt:/docker_registry/cert/server.crt:ro
    healthcheck:
      test: ["CMD", "cat", "/docker_registry/cert/server.crt"]
      # test: ["CMD-SHELL", "cat", "/docker_registry/cert/server.crt"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - jenkins

  # vault:
  #   build: ./dockerfiles/vault
  #   container_name: vault
  #   restart: unless-stopped
  #   environment:
  #     VAULT_ADDR: "http://127.0.0.1:8200"
  #   volumes:
  #     - ./vault:/etc/vault:ro
  #   networks:
  #     - jenkins
    
networks:
  jenkins:
    driver: bridge

volumes:
  jenkins-data:
    external: false
  jenkins-docker-certs:
    external: false
  sonarqube_data:
    external: false
  sonarqube_extensions:
    external: false
  sonarqube_logs:
    external: false
  postgresql:
    external: false
  postgresql_data:
    external: false