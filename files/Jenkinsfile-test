def envProps

pipeline {
  agent any

  tools {
    // dockerTool 'docker'
    go 'go'
  }

  environment {
    NODE_IMAGE = 'node:12.13.0'
    NODE_IMAGE_ARGS = '-u 0:0'
  }

  options {
      // This is required if you want to clean before build
      skipDefaultCheckout(true)
  }

  stages {
    stage('Init') {
      steps {
        cleanWs()
        echo '******************************'  
        // sh '''
        // env
        // which go
        // which docker        
        // '''
        // sh 'echo $(which go)'
      }
    }

    // stage('Test path') {
    //   steps {
    //     echo '******************************'  
    //     sh '''
    //     cd ~
    //     pwd
    //     ls -la
    //     '''
    //   }
    // }

    stage('Test Workspace') {
      steps {
        echo '******************************'  
        sh '''
        ls -l
        echo $(which go) > text.txt
        ls -l | grep -i text
        cat text.txt    
        grep -i "plugins" text.txt    
        '''
        // sh 'find ./ -type f -name "*.txt" -exec grep 'plugins'  {} \;'
      }
    }

    stage('Test create dir and file') {
      steps {
        echo '******************************'  
        sh '''
        pwd
        mkdir log_file
        find ./ -empty -type d -name "*file"
        touch data.txt
        echo $(which docker) > log_file/log.txt        
        '''        
      }
    }

    stage('Test search dir and file') {
        steps {
            echo '******************************'  
            sh '''
            ls -l
            find ./ -type f -name "*.txt"        
            find ./ -empty -type d -name "*file"
            find ./ -type d -name "*log*"
            '''
            // less command allows to view text files page by page
            // sh 'find ./ -type f -name *.txt | less'
        }
    }

    stage('Test another workspace') {

      agent any

      steps {
        echo '******************************'  
        echo 'Test another workspace'
        sh '''
        pwd
        ls -l
        find ./ -type f -name "*.txt"        
        find ./ -empty -type d -name "*file"
        find ./ -type d -name "*log*"
        '''
      }
    }
  }

  post {      
    always {
        // Clean after build
        cleanWs(cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true,
                patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                            [pattern: '.propsfile', type: 'EXCLUDE']])
    }
  }
}