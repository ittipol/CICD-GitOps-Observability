pipeline {
  agent any
  environment { 
    GIT_URL = "https://github.com/ittipol/Jenkins.git"
    REGISTRY_REPO = "host.docker.internal:5050/go-app"
  }
  parameters {
    string(name: 'TAG', defaultValue: '', description: 'Tag version')
  }
//   options {
//       // This is required if you want to clean before build
//       skipDefaultCheckout(true)
//   }
  stages {
    stage('Clear workspace') {
      steps {
        echo '************************************************************'
        // Clean before build
        // cleanWs()        
      }
    }
    stage('Git checkout') {
      steps {
        echo '************************************************************'
        // We need to explicitly checkout from SCM here
        // ‘checkout scm’ is only available when using “Multibranch Pipeline” or “Pipeline script from SCM”
        // checkout scm
        git branch: 'main', changelog: false, poll: false, url: env.GIT_URL
        // sh 'env'
        // sh '''
        // ls -l
        // '''
      }
    }
    stage("Update the deployment tag") {
      steps {
        echo '************************************************************'
        sh '''
        cat kubernetes/dev/deployment.yaml
        host.docker.internal:5050/go-app:1.0.0
        sed -i "s/$REGISTRY_REPO.*/$REGISTRY_REPO:${TAG}/g" kubernetes/dev/deployment.yaml
        cat kubernetes/dev/deployment.yaml
        '''
        
      }
    } 
  }
}