alias k=kubectl

## Linux
## Linux distros (Linux distribution) group of open source Linux operating system ex. Ubuntu, Debian, Arch Linux, Red Hat, Fedora
id -u
id -g

ps
ps aux | grep kubectl
pe -ef

htop
## =======

kubectl get node -o wide
kubectl describe nodes
kubectl config current-context
kubectl cluster-info
echo $(kubectl get node minikube -o jsonpath='{.status.capacity}')
kubectl api-versions
kubectl get crd
kubectl get pod -l app=webapp -o jsonpath="{.items[0].metadata.name}

## minikube
minikube start --driver=parallels
minikube config
minikube profile list
minikube ssh

## Push images
## Loading directly to in-cluster container runtime
minikube image load {image_name:tag}

## Building images to in-cluster container runtime
minikube image build -t {image_name:tag} .

## Run a specific service in docker-compose
docker-compose up -d docker-registry && docker-compose up -d nginx

## Delete unused docker images
docker system prune -a

## Copy key from /docker/nginx/certs/ca.crt
cd /etc/docker/
sudo mkdir -p certs.d/host.minikube.internal:5000
cd /etc/docker/certs.d/host.minikube.internal:5000
sudo touch ca.crt
sudo vi ca.crt

## sshpass
sshpass -p my_password ssh username@hostname
sshpass -p 'YOUR_PASSWORD_HERE' ssh -o StrictHostKeyChecking=no username@hostname

## minikube ssh
minikube ssh-key
cat ~/.minikube/machines/minikube/config.json
ssh -i ~/.minikube/machines/minikube/id_rsa docker@$(minikube ip)

## Transfer file
scp -i $(minikube ssh-key) <local-path> docker@$(minikube ip):<remote-path>
scp -i $(minikube ssh-key) ./cert/ca.crt docker@$(minikube ip):/home/docker/ca.crt

## Copy an entire directory
scp -r ./data/install user@hostname:~/data/install/

## Package manager
## Update package version after installed (apt command for debian) (yum command for redhat)
sudo apt update
sudo apt upgrade