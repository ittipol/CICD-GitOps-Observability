apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/part-of: docker
spec:
  replicas: 1
  #number of replicas generated
  selector:
    #assigns labels to the pods for future selection
    matchLabels:
      app.kubernetes.io/name: docker-registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2.8.3
        imagePullPolicy: Always
        env:
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: "/tls/tls.crt"
        - name: REGISTRY_HTTP_TLS_KEY  
          value: "/tls/tls.key"
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: "/auth/htpasswd"
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        ports:
        - containerPort: 5000
          name: http
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: auth-volume
          mountPath: /auth
          readOnly: true
        - name: tls-volume
          mountPath: /tls
          readOnly: true
      volumes:
      # - name: auth-volume
      #   configMap:
      #     name: docker-registry-auth
      - name: auth-volume
        secret:
          secretName: secret-auth
      - name: tls-volume
        secret:
          secretName: secret-tls