apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: kafka
  labels:
    app.kubernetes.io/name: kafka
spec:
  replicas: 1 #number of replicas generated  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # The maxSurge property controls the maximum number of additional pods that can be created during a rolling update
      maxUnavailable: 1 # The maxUnavailable property determines the maximum number or percentage of pods that can be unavailable during a rolling update
      # maxSurge: 25%
      # maxUnavailable: 25%
  selector:
    # Assigns labels to the pods for future selection
    matchLabels:
      app.kubernetes.io/app: kafka
  template:
    metadata:      
      labels:
        app.kubernetes.io/app: kafka
        istio: monitor
    spec:
      # serviceAccountName: kafka-sa
      containers:
      - name: kafka
        image: bitnami/kafka:3.4
        imagePullPolicy: IfNotPresent
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_ENABLE_KRAFT
          value: "no"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "zookeeper-service.kafka.svc.cluster.local:2181"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,EXTERNAL://:9094"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-service.kafka.svc.cluster.local:9092,EXTERNAL://0.0.0.0:9094"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"   
        # - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
        #   value: "true"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          runAsUser: 10001
          runAsGroup: 10001
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 9092
          name: http
        - containerPort: 9094
          name: external
        resources:          
          requests:
            cpu: "1"
            memory: 4Gi
          limits:
            cpu: "1"
            memory: 4Gi
        volumeMounts:
        - mountPath: /bitnami
          name: kafka-data
          readOnly: true
      volumes:
      - name: kafka-data
        hostPath:
          path: /bitnami
      