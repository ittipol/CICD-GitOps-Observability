pipeline {
  agent any
  environment {
    // dotnet tools
    PATH = "/var/jenkins_home/.dotnet/tools:$PATH"
  }
  options {
    // This is required if you want to clean before build
    skipDefaultCheckout(true)
  }
  stages {
    stage('Init') {
      steps {
        echo '::: Init ************************************************************'
        // Clean before build
        cleanWs()
        echo "Building ${env.JOB_NAME}..."        
      }
    }
    stage('Scan') {
      steps {
        echo '::: Scan ************************************************************'

        // clone project
        sh 'cp -r /unit_test/code/. $WORKSPACE'
        sh 'env'
        sh 'pwd'
        sh 'ls -l'

        // sh '''      
        // dotnet restore -p:TargetFrameworks=net8.0 -p:PackTargetFramework=net8.0
        // dotnet build --no-restore        
        // '''

        // run --> cs-sonarscan.sh
        
      }
    }
  }
  post {
    always {
      echo '::: POST ************************************************************'
      // Clean after build
      // cleanWs(cleanWhenNotBuilt: false,
      //         deleteDirs: true,
      //         disableDeferredWipeout: true,
      //         notFailBuild: true,
      //         patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
      //                     [pattern: '.propsfile', type: 'EXCLUDE']])
    }
    success {
      echo "Build ID: ${BUILD_ID}, ${JOB_NAME} succeeded"
    }
    failure {
      echo "Build ID: ${BUILD_ID}, ${JOB_NAME} failed"
    }
    aborted {
      echo "Build ID: ${BUILD_ID}, ${JOB_NAME} aborted"
    }
  }
}