def replace(data) {
   return data.replace("/", "\\/")
}

pipeline {
  agent any
  environment { 
    GIT_URL = "https://github.com/ittipol/Gitops.git"
    GIT_CREDENTIAL = "gitops-cred"
    REGISTRY_REPO = "host.minikube.internal:5000/go-app"
  }
  parameters {
    string(name: 'TAG', defaultValue: '1.0.0', description: 'Tag version')
  }
  options {
      // This is required if you want to clean before build
      skipDefaultCheckout(true)
  }
  stages {
    stage('Clear workspace') {
      steps {
        echo '************************************************************'
        // Clean before build
        cleanWs()        
      }
    }
    stage('Git checkout') {
      steps {
        echo '************************************************************'
        // We need to explicitly checkout from SCM here
        // ‘checkout scm’ is only available when using “Multibranch Pipeline” or “Pipeline script from SCM”
        // checkout scm
        git branch: 'main', changelog: false, credentialsId: env.GIT_CREDENTIAL, poll: false, url: env.GIT_URL
        // sh 'env'
        // sh 'which git'
        // '''
      }
    }
    stage("Update the deployment tag") {
      steps {
        echo '************************************************************'

        script {
          def registryRepo = replace("${env.REGISTRY_REPO}")

          sh """
          cat dev/deployment.yaml
          sed -i \'s/$registryRepo.*/$registryRepo:$TAG/g\' dev/deployment.yaml
          cat dev/deployment.yaml
          """
        }        
      }
    } 
    stage("Push the deployment file to Git") {
      steps {
        echo '************************************************************'

        sh """        
        git config --global user.name "Name"
        git config --global user.email ""
        git add dev/deployment.yaml
        git commit -m "Update tag version $TAG in deployment manifest"
        """

        withCredentials([gitUsernamePassword(credentialsId: GIT_CREDENTIAL, gitToolName: 'Default')]) {
          sh "git push $GIT_URL main"
        }
      }
    }
  }
}